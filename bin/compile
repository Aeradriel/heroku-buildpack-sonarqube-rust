#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -e

# parse args
BUILD_DIR=$1
CACHE_DIR=$2

BP_DIR=`cd $(dirname $0); cd ..; pwd`

SONAR_VERSION="3.5.1"
SONAR_DIST="sonar-${SONAR_VERSION}"
SONAR_DIST_ZIP="${SONAR_DIST}.zip"
SONAR_HOME=${BUILD_DIR}/sonar

JETTY_RUNNER_VERSION="8.1.0.RC1"
JETTY_RUNNER_DIST="jetty-runner-${JETTY_RUNNER_VERSION}"
JETTY_RUNNER_JAR="${JETTY_RUNNER_DIST}.jar"

if [ ! -d ${CACHE_DIR} ]; then
  mkdir -p ${CACHE_DIR}
fi

# Download Jetty Runner is not in cache
if [ ! -f ${CACHE_DIR}/${JETTY_RUNNER_JAR} ]; then  
  JETTY_RUNNER_URL="http://repo1.maven.org/maven2/org/mortbay/jetty/jetty-runner/${JETTY_RUNNER_VERSION}/${JETTY_RUNNER_JAR}"
  echo -n "-----> Downloading ${JETTY_RUNNER_DIST}....."
  curl --silent --location ${JETTY_RUNNER_URL} > ${CACHE_DIR}/${JETTY_RUNNER_JAR}
  echo " done"
fi

# Install Jetty Runner
echo -n "-----> Installing ${JETTY_RUNNER_DIST}...."
mkdir -p ${BUILD_DIR}/jetty
cp ${CACHE_DIR}/${JETTY_RUNNER_JAR} ${BUILD_DIR}/jetty/runner.jar
echo " done"

# Download Sonar if not in cache
if [ ! -f ${CACHE_DIR}/${SONAR_DIST_ZIP} ]; then  
  SONAR_URL="http://dist.sonar.codehaus.org/${SONAR_DIST_ZIP}"
  echo -n "-----> Downloading ${SONAR_DIST}....."
  curl --silent --location ${SONAR_URL} > ${CACHE_DIR}/${SONAR_DIST_ZIP}
  echo " done"
fi

echo -n "-----> Installing ${SONAR_DIST}...."

# Unzip Sonar
# `unzip` command is not available. 
cd ${BUILD_DIR}
jar xvf ${CACHE_DIR}/${SONAR_DIST_ZIP}
mv ${SONAR_DIST} ${SONAR_HOME}

# Copy vendored properties into Sonar
cp ${BP_DIR}/etc/sonar.properties ${SONAR_HOME}/conf

# Build the WAR
cd ${SONAR_HOME}/war
sed -i -r "s/ant$/ant -DsonarHome=\/app\/sonar/" build-war.sh
./build-war.sh

# Copy the vendored boot script for launching the WAR
cp ${BP_DIR}/opt/boot.sh ${SONAR_HOME}/war
chmod +x ${SONAR_HOME}/war/boot.sh

echo " done"


if [ "${PIPESTATUS[*]}" != "0" ]; then
  echo " !     Failed to install Sonar"
  exit 1
fi
